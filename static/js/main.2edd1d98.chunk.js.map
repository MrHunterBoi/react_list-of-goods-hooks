{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","none","sortMethod","setSortMethod","isReversed","setIsReversed","goodsToView","goods","sortedGoods","alphabetically","sort","a","b","localeCompare","length","reverse","getGoodsToView","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,QAAAA,E,gCAAAA,E,iBAAAA,M,KAWE,IAAME,EAAgB,WAC3B,IA0BA,EAAoCC,mBAASH,EAASI,MAAtD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA5BiB,SACrBC,EADqB,GAGP,IADZL,EACW,EADXA,WAAYE,EACD,EADCA,WAEVI,EAAW,YAAOD,GAEtB,OAAQL,GACN,KAAKL,EAASY,eACZD,EAAcA,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACzD,MAEF,KAAKf,EAASiB,OACZN,EAAcA,EAAYE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW1D,OAJIV,IACFI,EAAcA,EAAYO,WAGrBP,EAKqBQ,CAC5BlB,EACA,CAAEI,aAAYE,eAQhB,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAcN,EAASY,iBACtCU,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAeL,EAASY,iBAJxC,iCAUA,wBACES,QAAS,kBAAMf,EAAcN,EAASiB,SACtCK,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYlB,IAAeL,EAASiB,SAN1C,4BAYA,wBACEI,QAAS,kBAAMb,GAAeD,IAC9Be,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CAAE,YAAahB,IAHvD,sBAOEF,GAAcE,IACd,wBACEc,QAvCiB,WACzBf,EAAcN,EAASI,MACvBI,GAAc,IAsCNc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACE,6BACGX,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC/GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2edd1d98.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport cn from 'classnames';\nimport { useState } from 'react';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  none = '',\n  alphabetically = 'alphabetically',\n  length = 'length',\n}\n\ninterface SortingOptions {\n  sortMethod: SortType;\n  isReversed: boolean;\n}\n\nexport const App: React.FC = () => {\n  const getGoodsToView = (\n    goods: string[],\n    { sortMethod, isReversed }: SortingOptions,\n  ): string[] => {\n    let sortedGoods = [...goods];\n\n    switch (sortMethod) {\n      case SortType.alphabetically:\n        sortedGoods = sortedGoods.sort((a, b) => a.localeCompare(b));\n        break;\n\n      case SortType.length:\n        sortedGoods = sortedGoods.sort((a, b) => a.length - b.length);\n        break;\n\n      default:\n        break;\n    }\n\n    if (isReversed) {\n      sortedGoods = sortedGoods.reverse();\n    }\n\n    return sortedGoods;\n  };\n\n  const [sortMethod, setSortMethod] = useState(SortType.none);\n  const [isReversed, setIsReversed] = useState(false);\n  const goodsToView: string[] = getGoodsToView(\n    goodsFromServer,\n    { sortMethod, isReversed },\n  );\n\n  const handleResetSorting = () => {\n    setSortMethod(SortType.none);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortMethod(SortType.alphabetically)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortMethod !== SortType.alphabetically,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortMethod(SortType.length)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortMethod !== SortType.length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn('button', 'is-warning', { 'is-light': !isReversed })}\n        >\n          Reverse\n        </button>\n        {(sortMethod || isReversed) && (\n          <button\n            onClick={handleResetSorting}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goodsToView.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}